# Run previous commits to pinpoint a failure's origin.
stepback: true

# Mark failures other than test failures with a purple box.
command_type: system

# Limit maximum test running time.
exec_timeout_secs: 900 # 15 minutes

# What to do when evergreen hits the timeout
timeout:
  - command: shell.exec
    params:
      script: |
        ls -la

functions:
  fetch source:
    - command: git.get_project
      params:
        directory: src
    - command: subprocess.exec
      params:
        working_dir: src
        binary: bash
        add_expansions_to_env: true
        args:
          - .evergreen/setup-environment.sh
    - command: expansions.update
      params:
        file: src/expansion.yml

  install dependencies:
    - command: subprocess.exec
      type: setup
      params:
        working_dir: src
        binary: bash
        add_expansions_to_env: true
        args:
          - .evergreen/install-dependencies.sh

  run tests:
    - command: shell.exec
      type: test
      params:
        working_dir: src
        script: |
          ${PREPARE_SHELL}
          echo "NODE_VERSION=${NODE_VERSION} TEST_TARGET=${TEST_TARGET}"
          NODE_VERSION=${NODE_VERSION} ${PROJECT_DIRECTORY}/.evergreen/run-tests.sh ${TEST_TARGET}
  run checks:
    - command: shell.exec
      type: test
      params:
        working_dir: src
        script: |
          ${PREPARE_SHELL}
          echo "TEST_TARGET=${TEST_TARGET}"
          bash ${PROJECT_DIRECTORY}/.evergreen/run-checks.sh
  run typescript:
    - command: subprocess.exec
      type: test
      params:
        working_dir: src
        timeout_secs: 60
        env:
          PROJECT_DIRECTORY: ${PROJECT_DIRECTORY}
          TS_VERSION: "${TS_VERSION}"
          TRY_COMPILING_LIBRARY: "${TRY_COMPILING_LIBRARY}"
        binary: bash
        args:
          - ${PROJECT_DIRECTORY}/.evergreen/run-typescript.sh

tasks:
  - name: node-tests-v6
    tags: ["node"]
    commands:
      - func: fetch source
        vars:
          NODE_MAJOR_VERSION: 6
      - func: install dependencies
      - func: run tests
        vars:
          TEST_TARGET: node
  - name: node-tests-v8
    tags: ["node"]
    commands:
      - func: fetch source
        vars:
          NODE_MAJOR_VERSION: 8
      - func: install dependencies
      - func: run tests
        vars:
          TEST_TARGET: node
  - name: node-tests-v10
    tags: ["node"]
    commands:
      - func: fetch source
        vars:
          NODE_MAJOR_VERSION: 10
      - func: install dependencies
      - func: run tests
        vars:
          TEST_TARGET: node
  - name: node-tests-v12
    tags: ["node"]
    commands:
      - func: fetch source
        vars:
          NODE_MAJOR_VERSION: 12
      - func: install dependencies
      - func: run tests
        vars:
          TEST_TARGET: node
  - name: node-tests-v14
    tags: ["node"]
    commands:
      - func: fetch source
        vars:
          NODE_LTS_VERSION: 14
      - func: install dependencies
      - func: run tests
        vars:
          TEST_TARGET: node
  - name: node-tests-v16
    tags: ["node"]
    commands:
      - func: fetch source
        vars:
          NODE_LTS_VERSION: 16
      - func: install dependencies
      - func: run tests
        vars:
          TEST_TARGET: node
  - name: node-tests-v18
    tags: ["node"]
    commands:
      - func: fetch source
        vars:
          NODE_LTS_VERSION: 18
      - func: install dependencies
      - func: run tests
        vars:
          TEST_TARGET: node
  - name: node-tests-v20
    tags: ["node"]
    commands:
      - func: fetch source
        vars:
          NODE_LTS_VERSION: 20
      - func: install dependencies
      - func: run tests
  - name: node-tests-latest
    tags: ["node"]
    commands:
      - func: fetch source
        vars:
          NODE_LTS_VERSION: latest
      - func: install dependencies
      - func: run tests
        vars:
          TEST_TARGET: node
  - name: browser-tests
    tags: ["browser"]
    commands:
      - func: fetch source
        vars:
          NODE_LTS_VERSION: 20
      - func: install dependencies
      - func: run tests
        vars:
          TEST_TARGET: web
  - name: run-checks
    tags:
      - run-checks
    commands:
      - func: fetch source
        vars:
          NODE_LTS_VERSION: 20
      - func: install dependencies
      - func: run checks
  - name: check-typescript-oldest
    commands:
      - func: fetch source
        vars:
          NODE_LTS_VERSION: 20
      - func: install dependencies
      - func: "run typescript"
        vars:
          TS_VERSION: "4.0.2"
          TRY_COMPILING_LIBRARY: "true"
  - name: check-typescript-current
    commands:
      - func: fetch source
        vars:
          NODE_LTS_VERSION: 20
      - func: install dependencies
      - func: "run typescript"
        vars:
          TS_VERSION: ""
          TRY_COMPILING_LIBRARY: "true"
  - name: check-typescript-next
    commands:
      - func: fetch source
        vars:
          NODE_LTS_VERSION: 20
      - func: install dependencies
      - func: "run typescript"
        vars:
          TS_VERSION: "next"
          TRY_COMPILING_LIBRARY: "false"

buildvariants:
  - name: linux
    display_name: Ubuntu 22.04
    run_on: ubuntu2004-small
    tasks: [".node", ".browser"]
  - name: mac
    display_name: MacOS 10.14
    run_on: macos-1014
    tasks: [".node"]
  - name: lint
    display_name: lint
    run_on: ubuntu2004-small
    tasks:
      - run-checks
      - check-typescript-oldest
      - check-typescript-current
      - check-typescript-next
